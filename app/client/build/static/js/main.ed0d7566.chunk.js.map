{"version":3,"sources":["icons/AngleRightWhite.svg","icons/RedoCircle.svg","components/StereoImage.js","components/LoadingScreen.js","components/DisparityMaps.js","components/ImagePanel.js","components/CameraSettings.js","components/DisparitySettings.js","components/ReferencePoints.js","components/MeasurePoints.js","components/Sidebar.js","App.js","index.js","icons/AngleRight.svg"],"names":["module","exports","Canvas","props","setImage","file","canvas","refs","ctx","getContext","reader","FileReader","onload","event","img","Image","imageRatio","width","height","drawImage","canvasMode","updateValue","renderValidPoints","validPoints","refpt1","points","referencePt1","refpt2","referencePt2","measurept1","measurePt1","measurept2","measurePt2","renderPts","src","target","result","readAsDataURL","fillStyle","i","length","j","fillRect","name","value","setPoint","mode","coord","getBoundingClientRect","x","Math","round","clientX","left","y","clientY","top","point","newP1","newP1x","newP1y","lineWidth","beginPath","moveTo","lineTo","strokeStyle","stroke","bind","this","nextProps","nextState","ref","onClick","React","Component","StereoImage","changeImage","onImageChange","idName","files","uploadImage","form","FormData","append","session","request","XMLHttpRequest","responseType","react","onreadystatechange","readyState","status","errorLog","response","waiting","open","send","newState","clearImage","upload","image","htmlFor","className","style","resizeWidth","labelText","type","id","onChange","accept","LoadingScreen","loadingMessage","TransitionGroup","component","isLoading","CSSTransition","classNames","timeout","DisparityMaps","getDisparityMaps","setState","params","imageLeftName","imageRightName","focalLength","sensorWidth","images","getValidPoints","minDisparity","numDisparity","updateState","setValidPoints","handleOnclickNext","is_valid","parseInt","imageWidth","imageHeight","array","onClickHandler","setDisparity","state","disparityStyle","mapWidth","mapHeight","disparitymaps","map","index","key","image_name","alt","min_disparity","num_disparity","title","handleOnclickBack","angleright","ImagePanel","updateParentState","nextStep","currentStep","changeCurrentStep","max","step","imagesUploaded","imageLeft","imageRight","anglerightwhite","unitchanger","imageName","userPoints","resizeHeight","estimatedDistance","measureUnit","referenceLength","referenceUnit","CameraSettings","changeSetting","onSettingsChange","onChangeHandler","predictFocal","responseText","DisparitySettings","ReferencePoints","updateReferenceUnit","measurenit","clearPoints","checked","MeasurePoints","predictLength","reference_points","measurement_points","updateAppState","JSON","parse","toString","Sidebar","calculatedParams","image_width","image_height","App","restart","handleStateUpdate","handleChange","back","next","min","getMeasurement","convert","from","to","Date","now","redocircle","ReactDOM","render","document","getElementById"],"mappings":"oFAAAA,EAAOC,QAAU,IAA0B,6C,mBCA3CD,EAAOC,QAAU,IAA0B,wC,oPCErCC,E,YACJ,WAAYC,GAAQ,IAAD,8BACjB,4CAAMA,KA0BRC,SAAW,SAAAC,GACT,IAAMC,EAAS,EAAKC,KAAKD,OACnBE,EAAMF,EAAOG,WAAW,MAE1BC,EAAS,IAAIC,WACjBD,EAAOE,OAAS,SAAAC,GACZ,IAAIC,EAAM,IAAIC,MACdD,EAAIF,OAAS,WACX,IAAII,EAAa,EAAKb,MAAMc,MAAQH,EAAIG,MACxCX,EAAOW,MAAQH,EAAIG,MAAQD,EAC3BV,EAAOY,OAASJ,EAAII,OAASF,EAC7BR,EAAIW,UAAUL,EAAK,EAAG,EAAGR,EAAOW,MAAOX,EAAOY,QAEhB,eAA1B,EAAKf,MAAMiB,YACb,EAAKC,YAAY,eAAgBf,EAAOY,QAG1C,EAAKI,kBAAkBd,EAAK,EAAKL,MAAMoB,YAAajB,EAAOW,MAAOX,EAAOY,QAEzE,IAAIM,EAAS,EAAKrB,MAAMsB,OAAOC,aAC3BC,EAAS,EAAKxB,MAAMsB,OAAOG,aAC3BC,EAAa,EAAK1B,MAAMsB,OAAOK,WAC/BC,EAAa,EAAK5B,MAAMsB,OAAOO,WAEnC,EAAKC,UAAUzB,EAAKgB,EAAQG,EAAQE,EAAYE,IAElDjB,EAAIoB,IAAMrB,EAAMsB,OAAOC,QAE3B1B,EAAO2B,cAAchC,IAvDJ,EA0DnBiB,kBAAoB,SAACd,EAAKe,GACxB,GAAoB,KAAhBA,EAAoB,OAAO,KAE/Bf,EAAI8B,UAAY,QAChB,IAAK,IAAIC,EAAI,EAAGA,EAAIhB,EAAYiB,OAAQD,IACtC,IAAK,IAAIE,EAAI,EAAGA,EAAIlB,EAAYgB,GAAGC,OAAQC,KAChB,IAAtBlB,EAAYgB,GAAGE,IAChBjC,EAAIkC,SAASH,EAAEE,EAAE,EAAE,IAjER,EAuEnBpB,YAAc,SAACsB,EAAMC,GACnB,EAAKzC,MAAMkB,YAAX,eAAyBsB,EAAOC,KAxEf,EA4EnBC,SAAW,SAAAhC,GACT,IAAMiC,EAAO,EAAK3C,MAAMiB,WAExB,GAAa,SAAT0B,EAAiB,OAAO,KAE5B,IACIC,EADW,EAAKxC,KAAKD,OACN0C,wBACfC,EAAIC,KAAKC,MAAMtC,EAAMuC,QAAUL,EAAMM,MACrCC,EAAIJ,KAAKC,MAAMtC,EAAM0C,QAAUR,EAAMS,KAEzC,IAAI,EAAKrD,MAAMoB,YAAY0B,GAAGK,GAAI,OAAO,KAEzC,IAAI7B,EAAS,EAAKtB,MAAMsB,OACpBgC,EAAQX,EAAO,MAEnB,GAAsB,KAAlBrB,EAAOgC,IAGa,KAAlBhC,EAFJgC,EAAQX,EAAO,OAEW,CACxB,IAAIY,EAAQZ,EAAO,MACfa,EAASlC,EAAOgC,GAAOR,EACvBW,EAASnC,EAAOgC,GAAOH,EAE3B,EAAKnD,MAAM0C,SAASa,EAAOC,EAAQC,GAIvC,EAAKzD,MAAM0C,SAASY,EAAOR,EAAGK,IAvGb,EA0GnBrB,UAAY,SAACzB,EAAKgB,EAAQG,EAAQE,EAAYE,GAC5CvB,EAAIqD,UAAY,EAEF,KAAXrC,IACDhB,EAAI8B,UAAY,OAChB9B,EAAIkC,SAASlB,EAAOyB,EAAEzB,EAAO8B,EAAE,EAAE,IAErB,KAAX3B,IACDnB,EAAI8B,UAAY,OAChB9B,EAAIkC,SAASf,EAAOsB,EAAEtB,EAAO2B,EAAE,EAAE,GACjC9C,EAAIsD,YACJtD,EAAIuD,OAAOvC,EAAOyB,EAAGzB,EAAO8B,GAC5B9C,EAAIwD,OAAOrC,EAAOsB,EAAGtB,EAAO2B,GAC5B9C,EAAIyD,YAAc,OAClBzD,EAAI0D,UAGY,KAAfrC,IACDrB,EAAI8B,UAAY,MAChB9B,EAAIkC,SAASb,EAAWoB,EAAEpB,EAAWyB,EAAE,EAAE,IAEzB,KAAfvB,IACDvB,EAAI8B,UAAY,MAChB9B,EAAIkC,SAASX,EAAWkB,EAAElB,EAAWuB,EAAE,EAAE,GACzC9C,EAAIsD,YACJtD,EAAIuD,OAAOlC,EAAWoB,EAAGpB,EAAWyB,GACpC9C,EAAIwD,OAAOjC,EAAWkB,EAAGlB,EAAWuB,GACpC9C,EAAIyD,YAAc,MAClBzD,EAAI0D,WApIN,EAAK7C,YAAc,EAAKA,YAAY8C,KAAjB,gBACnB,EAAKtB,SAAW,EAAKA,SAASsB,KAAd,gBAHC,E,iFAOjBC,KAAKhE,SAASgE,KAAKjE,MAAME,Q,4CAGLgE,EAAWC,GAC/B,OACED,EAAUhE,OAAS+D,KAAKjE,MAAME,MAC9BgE,EAAU9C,cAAgB6C,KAAKjE,MAAMoB,aACrC8C,EAAU5C,SAAW2C,KAAKjE,MAAMsB,S,2CASlC2C,KAAKhE,SAASgE,KAAKjE,MAAME,Q,+BAoHzB,OACE,4BACEkE,IAAI,SACJtD,MAAOmD,KAAKjE,MAAMc,MAClBC,OAAQ,IACRsD,QAASJ,KAAKvB,e,GAjJD4B,IAAMC,WAkPZC,E,YA1Fb,WAAYxE,GAAQ,IAAD,8BACjB,4CAAMA,KAKR0C,SAAW,SAACY,EAAOR,EAAGK,GACpB,EAAKnD,MAAM0C,SAASY,EAAOR,EAAGK,IAPb,EAUnBsB,YAAc,SAAA/D,GACZ,EAAKV,MAAM0E,cAAX,eACG,EAAK1E,MAAM2E,OAASjE,EAAMsB,OAAO4C,MAAM,KAG1C,EAAKC,YAAYnE,EAAMsB,OAAO4C,MAAM,KAfnB,EAkBnBC,YAAc,SAAA3E,GACZ,IAAI4E,EAAO,IAAIC,SACfD,EAAKE,OAAO,QAAS9E,GACrB4E,EAAKE,OAAO,aAAc,EAAKhF,MAAMiF,SAErC,IAAIC,EAAU,IAAIC,eAClBD,EAAQE,aAAe,OACvB,IAAIC,EAAK,eACTH,EAAQI,mBAAqB,WACJ,IAApBrB,KAAKsB,aACa,MAAhBtB,KAAKuB,QACNH,EAAMnE,YAAY,CAACuE,SAAU,KAC7BJ,EAAMnE,YAAN,eAAoBmE,EAAMrF,MAAM2E,OAAS,OAASV,KAAKyB,SAAL,QAElDL,EAAMnE,YAAY,CAACuE,SAAUxB,KAAKyB,WAEpCL,EAAMnE,YAAY,CAACyE,SAAS,MAGhCT,EAAQU,KAAK,OAAQ,gCACrBV,EAAQW,KAAKf,IAtCI,EAyCnB5D,YAAc,SAAA4E,GACZ,EAAK9F,MAAM0E,cAAcoB,IA1CR,EA6CnBC,WAAa,SAAArF,GACX,EAAKV,MAAM0E,cAAX,eACG,EAAK1E,MAAM2E,OAAS,MA7CvB,EAAKF,YAAc,EAAKA,YAAYT,KAAjB,gBACnB,EAAKtB,SAAW,EAAKA,SAASsB,KAAd,gBAHC,E,sEAoDjB,IAAIgC,EAsBJ,OApBEA,EADuB,KAArB/B,KAAKjE,MAAMiG,MACJ,2BAAOC,QAASjC,KAAKjE,MAAM2E,OAAQwB,UAAU,wEAC1CC,MAAO,CAACtF,MAAOmD,KAAKjE,MAAMqG,YAAY,OACtC,6BAAMpC,KAAKjE,MAAMsG,YAI3B,0BAAMH,UAAU,cACd,kBAAC,EAAD,CACErF,MAAOmD,KAAKjE,MAAMqG,YAClBnG,KAAM+D,KAAKjE,MAAMiG,MACjBhF,WAAYgD,KAAKjE,MAAMiB,WACvBK,OAAQ2C,KAAKjE,MAAMsB,OACnBF,YAAa6C,KAAKjE,MAAMoB,YACxBsB,SAAUuB,KAAKvB,SACfxB,YAAa+C,KAAK/C,cAClB,6BACF,2BAAOmD,QAASJ,KAAK8B,WAAYG,QAASjC,KAAKjE,MAAM2E,QAArD,gBAKJ,8BACGqB,EACD,2BACEO,KAAK,OACLC,GAAIvC,KAAKjE,MAAM2E,OACfnC,KAAMyB,KAAKjE,MAAM2E,OACjB8B,SAAUxC,KAAKQ,YACf0B,UAAU,YACVO,OAAO,mB,GApFSnC,aC9HXoC,E,iLArBX,IAAMC,EAAiB,2BAAI3C,KAAKjE,MAAM4G,gBAEtC,OACE,kBAACC,EAAA,EAAD,CAAiBC,UAAW,MAEzB7C,KAAKjE,MAAM+G,WACV,kBAACC,EAAA,EAAD,CAAeC,WAAW,OAAOC,QAAS,KACxC,yBAAKf,UAAU,WACb,yBAAKA,UAAU,QACf,yBAAKA,UAAU,aACf,yBAAKA,UAAU,gBACZS,U,GAdWrC,a,gBCyKb4C,E,YAvKb,WAAYnH,GAAQ,IAAD,8BACjB,4CAAMA,KAgBRoH,iBAAmB,WACjB,EAAKC,SAAS,CAACN,WAAW,IAI1B,IAAIjC,EAAO,IAAIC,SACfD,EAAKE,OAAO,kBAAmB,EAAKhF,MAAMsH,OAAOC,eACjDzC,EAAKE,OAAO,mBAAoB,EAAKhF,MAAMsH,OAAOE,gBAClD1C,EAAKE,OAAO,eAAgB,EAAKhF,MAAMsH,OAAOG,aAC9C3C,EAAKE,OAAO,eAAgB,EAAKhF,MAAMsH,OAAOI,aAC9C5C,EAAKE,OAAO,aAAc,EAAKhF,MAAMiF,SAErC,IAAIC,EAAU,IAAIC,eAClBD,EAAQE,aAAe,OACvB,IAAIC,EAAK,eACTH,EAAQI,mBAAqB,WACJ,IAApBrB,KAAKsB,aACa,MAAhBtB,KAAKuB,QACNH,EAAMgC,SAAS,CAAC5B,SAAU,KAC1BJ,EAAMgC,SAAS,CAACM,OAAQ1D,KAAKyB,YAE7BL,EAAMgC,SAAS,CAAC5B,SAAUxB,KAAKyB,WAEjCL,EAAMgC,SAAS,CAACN,WAAW,MAG/B7B,EAAQU,KAAK,OAAQ,wCACrBV,EAAQW,KAAKf,IA5CI,EA+CnB8C,eAAiB,WACf,EAAKP,SAAS,CAACN,WAAW,IAI1B,IAAIjC,EAAO,IAAIC,SACfD,EAAKE,OAAO,kBAAmB,EAAKhF,MAAMsH,OAAOC,eACjDzC,EAAKE,OAAO,mBAAoB,EAAKhF,MAAMsH,OAAOE,gBAClD1C,EAAKE,OAAO,eAAgB,EAAKhF,MAAMsH,OAAOG,aAC9C3C,EAAKE,OAAO,eAAgB,EAAKhF,MAAMsH,OAAOI,aAC9C5C,EAAKE,OAAO,gBAAiB,EAAKhF,MAAMsH,OAAOO,cAC/C/C,EAAKE,OAAO,gBAAiB,EAAKhF,MAAMsH,OAAOQ,cAC/ChD,EAAKE,OAAO,cAAe,KAE3B,IAAIE,EAAU,IAAIC,eAClBD,EAAQE,aAAe,OACvB,IAAIC,EAAK,eACTH,EAAQI,mBAAqB,WACJ,IAApBrB,KAAKsB,aACa,MAAhBtB,KAAKuB,QACNH,EAAMrF,MAAM+H,YAAY,CAACtC,SAAUxB,KAAKyB,WACxCL,EAAM2C,eAAe/D,KAAKyB,SAAL,SAA2BzB,KAAKyB,SAAL,QAChDL,EAAMrF,MAAMiI,qBAEZhE,KAAKjE,MAAM+H,YAAY,CAACtC,SAAUxB,KAAKyB,WAEzCL,EAAMgC,SAAS,CAACN,WAAW,MAG/B7B,EAAQU,KAAK,OAAQ,sCACrBV,EAAQW,KAAKf,IA7EI,EAiFnBkD,eAAiB,SAACE,EAAU5G,GAC1B,IAAIc,EAAGE,EACHxB,EAAQqH,SAAS,EAAKnI,MAAMoI,YAC5BrH,EAASoH,SAAS,EAAKnI,MAAMqI,aAC7BC,EAAQ,GAGZ,IAAIlG,EAAE,EAAGA,EAAItB,EAAOsB,IAElB,IADAkG,EAAMlG,GAAK,GACPE,EAAE,EAAGA,EAAIvB,EAAQuB,IACnBgG,EAAMlG,GAAGE,IAAM4F,EAKnB,IAAI9F,EAAE,EAAGA,EAAId,EAAOe,OAAQD,IAAK,CAC/B,IAAIU,EAAIxB,EAAOc,GAAG,GACde,EAAI7B,EAAOc,GAAG,GAElBkG,EAAMxF,GAAGK,GAAK+E,EAEhB,EAAKlI,MAAM+H,YAAY,CAAC3G,YAAakH,KAtGpB,EAyGnBC,eAAiB,WACf,EAAKX,kBA1GY,EA6GnBY,aAAe,SAACX,EAAcC,GAC5B,EAAK9H,MAAM+H,YAAY,CACrBF,aAAcM,SAASN,GACvBC,aAAcK,SAASL,KAEzB,EAAKF,kBA/GL,EAAKa,MAAQ,CACXd,OAAQ,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IACjClC,SAAU,GACVsB,WAAW,EACXH,eAAgB,8BAGlB,EAAKoB,eAAiB,EAAKA,eAAehE,KAApB,gBAVL,E,iFAcjBC,KAAKmD,qB,+BAuGG,IAAD,OACDsB,EAAiB,CACrB5H,MAAOmD,KAAKjE,MAAM2I,SAAS,KAC3B5H,OAAQkD,KAAKjE,MAAM4I,UAAU,MAIzBC,EADS5E,KAAKwE,MAAMd,OACGmB,KAAI,SAAC7C,EAAO8C,GAAR,OAC/B,yBAAK5C,UAAU,YAAY6C,IAAKD,GACE,qBAAtB9C,EAAMgD,YACZ,yBAAK9C,UAAU,gBAAgBC,MAAOsC,IAGV,qBAAtBzC,EAAMgD,YACZ,yBAAK9C,UAAU,uBAAuBC,MAAOsC,GAC3C,yBACE3G,IAAK,gCAAkCkE,EAAMgD,WAC7CC,IAAK,oBAAsBjD,EAAMkD,cAAgB,uBAAyBlD,EAAMmD,cAChFC,MAAO,oBAAsBpD,EAAMkD,cAAgB,uBAAyBlD,EAAMmD,cAClF/E,QAAS,EAAKmE,aAAaxE,KAAK,KAAMiC,EAAMkD,cAAclD,EAAMmD,sBAO5E,OACE,6BACE,kBAAC,EAAD,CACErC,UAAW9C,KAAKwE,MAAM1B,UACtBH,eAAgB3C,KAAKwE,MAAM7B,iBAE7B,yBAAKT,UAAU,QACb,0BAAMA,UAAU,sCAAsC9B,QAASJ,KAAKjE,MAAMsJ,mBACxE,yBAAKnD,UAAU,OAAOpE,IAAKwH,IAAYL,IAAI,KAD7C,UAIF,yBAAK/C,UAAU,QACb,qHAIF,yBAAKA,UAAU,8CACZ0C,Q,GAjKiBtE,a,iBCuKbiF,E,YApKb,WAAYxJ,GAAQ,IAAD,8BACjB,4CAAMA,KAIRyJ,kBAAoB,SAAA3D,GAClB,EAAK9F,MAAM+H,YAAYjC,IANN,EASnBmC,kBAAoB,WAClB,IAAIyB,EAAW,EAAK1J,MAAM2J,YAAc,EACxC,EAAKC,kBAAkBF,IAXN,EAcnBJ,kBAAoB,WAClB,IAAII,EAAW,EAAK1J,MAAM2J,YAAc,EACxCD,EAAW3G,KAAK8G,IAAI,EAAGH,GACvB,EAAKE,kBAAkBF,IAjBN,EAoBnBE,kBAAoB,SAAAE,GAClB,EAAK9J,MAAM+H,YAAY,CACrB4B,YAAaG,KAtBE,EA0BnBpH,SAAW,SAACY,EAAOR,EAAGK,GACpB,EAAKnD,MAAM+H,YAAX,eACGzE,EAAQ,CACPR,EAAGA,EACHK,EAAGA,MA5BP,EAAKsG,kBAAoB,EAAKA,kBAAkBzF,KAAvB,gBAFR,E,sEAoCjB,IAAM+F,EAAiD,KAA/B9F,KAAKjE,MAAM4E,MAAMoF,WAAoD,KAAhC/F,KAAKjE,MAAM4E,MAAMqF,WAE9E,OACE,yBAAK9D,UAAU,iDACb,6BACI,yBAAKA,UAAU,8BACb,kBAACU,EAAA,EAAD,CAAiBC,UAAW,MAEE,IAA3B7C,KAAKjE,MAAM2J,cAAsBI,GAChC,kBAAC/C,EAAA,EAAD,CAAeC,WAAW,OAAOC,QAAS,GACxC,wBAAIf,UAAU,WAAd,uDAIwB,IAA3BlC,KAAKjE,MAAM2J,aAAqBI,GAC/B,kBAAC/C,EAAA,EAAD,CAAeC,WAAW,OAAOC,QAAS,GACxC,yBAAKf,UAAU,sBACb,4BAAQI,KAAK,SAASJ,UAAU,qDAAqD9B,QAASJ,KAAKgE,mBAAnG,YACW,yBAAK9B,UAAU,OAAOpE,IAAKmI,IAAiBhB,IAAI,SAMhEjF,KAAKjE,MAAM2J,YAAc,GACxB,kBAAC3C,EAAA,EAAD,CAAeC,WAAW,OAAOC,QAAS,GACxCjD,KAAKjE,MAAMmK,eAOrB,kBAACtD,EAAA,EAAD,CAAiBC,UAAW,MACE,IAA3B7C,KAAKjE,MAAM2J,aACV,kBAAC3C,EAAA,EAAD,CAAeC,WAAW,OAAOC,QAAS,GACxC,yBAAKf,UAAU,0DACb,kBAAC,EAAD,CACElB,QAAShB,KAAKjE,MAAM4E,MAAMK,QAC1BN,OAAO,YACPsB,MAAOhC,KAAKjE,MAAM4E,MAAMoF,UACxBI,UAAWnG,KAAKjE,MAAM4E,MAAM4C,eAC5BlB,UAAU,6BACVD,YAAapC,KAAKjE,MAAMqG,YACxB3B,cAAeT,KAAKwF,kBACpBxI,WAAYgD,KAAKjE,MAAMiB,WACvBK,OAAQ2C,KAAKjE,MAAMqK,WACnBjJ,YAAa6C,KAAKjE,MAAMoB,YACxBsB,SAAUuB,KAAKvB,WAGjB,kBAACmE,EAAA,EAAD,CAAiBC,UAAW,MACE,IAA3B7C,KAAKjE,MAAM2J,aACV,kBAAC3C,EAAA,EAAD,CAAeC,WAAW,OAAOC,QAAS,GACxC,yBAAKf,UAAU,QACb,kBAAC,EAAD,CACElB,QAAShB,KAAKjE,MAAM4E,MAAMK,QAC1BN,OAAO,aACPsB,MAAOhC,KAAKjE,MAAM4E,MAAMqF,WACxBG,UAAWnG,KAAKjE,MAAM4E,MAAM4C,eAC5BlB,UAAU,8BACVD,YAAapC,KAAKjE,MAAMqG,YACxB3B,cAAeT,KAAKwF,kBACpBxI,WAAW,aACXK,OAAQ2C,KAAKjE,MAAMqK,WACnBjJ,YAAY,GACZsB,SAAUuB,KAAKvB,iBAYL,IAA3BuB,KAAKjE,MAAM2J,aACV,kBAAC3C,EAAA,EAAD,CAAeC,WAAW,OAAOC,QAAS,GACxC,kBAAC,EAAD,CACEjC,QAAShB,KAAKjE,MAAM4E,MAAMK,QAC1BqC,OAAQrD,KAAKjE,MAAMsH,OACnBc,WAAYnE,KAAKjE,MAAMqG,YACvBgC,YAAapE,KAAKjE,MAAMsK,aACxB3B,SAAU1E,KAAKjE,MAAMqG,YAAY,EACjCuC,UAAW3E,KAAKjE,MAAMsK,aAAa,EACnCvC,YAAa9D,KAAKjE,MAAM+H,YACxBE,kBAAmBhE,KAAKjE,MAAMiI,kBAC9BqB,kBAAmBrF,KAAKjE,MAAMsJ,qBAKD,KAAjCrF,KAAKjE,MAAMuK,mBACZ,yBAAKpE,UAAU,wEACI,6BACE,0BAAMA,UAAU,QAAO,4BAAQA,UAAU,QAAlB,qBAAvB,IAA4ElC,KAAKjE,MAAMuK,kBAAvF,IAA2GtG,KAAKjE,MAAMwK,cAExH,+BAIlBvG,KAAKjE,MAAM2J,YAAc,GAC1B,yBAAKxD,UAAU,wEACI,6BACE,0BAAMA,UAAU,QAAO,4BAAQA,UAAU,QAAlB,qBAAvB,IAA4ElC,KAAKjE,MAAMyK,gBAAvF,IAAyGxG,KAAKjE,MAAM0K,gBAEtH,6BAAK,4BAAQnE,KAAK,SAASJ,UAAU,qBAAhC,UAIvBlC,KAAKjE,MAAM2J,YAAc,GACxB,yBAAKxD,UAAU,wEACM,6BACE,0BAAMA,UAAU,QAAO,4BAAQA,UAAU,QAAlB,iBAAvB,IAAwElC,KAAKjE,MAAMyH,YAAnF,OACA,8BAAM,4BAAQtB,UAAU,QAAlB,iBAAwClC,KAAKjE,MAAM0H,YAAnD,SAER,6BAAK,4BAAQnB,KAAK,SAASJ,UAAU,qBAAhC,gB,GA3Jd5B,aCyFVoG,E,YA3Fb,WAAY3K,GAAQ,IAAD,8BACjB,4CAAMA,KAkCR4K,cAAgB,SAACpI,EAAMC,GACrB,EAAKzC,MAAM6K,iBAAX,eAA8BrI,EAAOC,KApCpB,EAuCnBqI,gBAAkB,SAAApK,GAChB,EAAKV,MAAM6K,iBAAX,eAA8BnK,EAAMsB,OAAOQ,KAAO9B,EAAMsB,OAAOS,SAxC9C,EA2CnB8F,eAAiB,SAAA7H,GACf,EAAKqK,gBAzCL,EAAKtC,MAAQ,CACX1B,WAAW,EACXH,eAAgB,8BAGlB,EAAKgE,cAAgB,EAAKA,cAAc5G,KAAnB,gBARJ,E,4EAYjBC,KAAKoD,SAAS,CAACN,WAAW,IAI1B,IAAIjC,EAAO,IAAIC,SACfD,EAAKE,OAAO,aAAcf,KAAKjE,MAAMoK,WAErC,IAAIlF,EAAU,IAAIC,eACdE,EAAQpB,KACZiB,EAAQI,mBAAqB,WACJ,IAApBrB,KAAKsB,aACa,MAAhBtB,KAAKuB,OACNH,EAAMuF,cAAc,cAAe3G,KAAK+G,cAExC3F,EAAMuF,cAAc,WAAY3G,KAAK+G,cAEvC3F,EAAMgC,SAAS,CAACN,WAAW,MAG/B7B,EAAQU,KAAK,OAAQ,sCACrBV,EAAQW,KAAKf,K,+BAgBb,OACE,6BACE,kBAAC,EAAD,CACEiC,UAAW9C,KAAKwE,MAAM1B,UACtBH,eAAgB3C,KAAKwE,MAAM7B,iBAG7B,2BAAOV,QAAQ,eAAf,gBACA,yBAAKC,UAAU,oBACb,2BAAOI,KAAK,OACVC,GAAG,cACHhE,KAAK,cACL2D,UAAU,eACVM,SAAUxC,KAAK6G,gBACfrI,MAAOwB,KAAKjE,MAAMyH,cACpB,yBAAKtB,UAAU,sBACb,0BAAMA,UAAU,oBAAhB,QAGJ,yBAAKA,UAAU,qDACb,8DACA,4BAAQI,KAAK,SAASJ,UAAU,oBAAoB9B,QAASJ,KAAKsE,gBAAlE,mBAGF,6BAEA,2BAAOrC,QAAQ,eAAf,gBACA,yBAAKC,UAAU,oBACb,2BAAOI,KAAK,OACVC,GAAG,cACHhE,KAAK,cACL2D,UAAU,eACVM,SAAUxC,KAAK6G,gBACfrI,MAAOwB,KAAKjE,MAAM0H,cACpB,yBAAKvB,UAAU,sBACb,0BAAMA,UAAU,oBAAhB,a,GApFiB5B,aC4Hd0G,E,YA3Hb,WAAYjL,GAAQ,IAAD,8BACjB,4CAAMA,KAWR4H,eAAiB,SAACC,EAAcC,GAC9B,EAAKT,SAAS,CAACN,WAAW,IAI1B,IAAIjC,EAAO,IAAIC,SACfD,EAAKE,OAAO,kBAAmB,EAAKhF,MAAMsH,OAAOC,eACjDzC,EAAKE,OAAO,mBAAoB,EAAKhF,MAAMsH,OAAOE,gBAClD1C,EAAKE,OAAO,eAAgB,EAAKhF,MAAMsH,OAAOG,aAC9C3C,EAAKE,OAAO,eAAgB,EAAKhF,MAAMsH,OAAOI,aAC9C5C,EAAKE,OAAO,gBAAiB6C,GAC7B/C,EAAKE,OAAO,gBAAiB8C,GAC7BhD,EAAKE,OAAO,cAAe,KAE3B,IAAIE,EAAU,IAAIC,eAClBD,EAAQE,aAAe,OACvB,IAAIC,EAAK,eACTH,EAAQI,mBAAqB,WACJ,IAApBrB,KAAKsB,aACa,MAAhBtB,KAAKuB,QACNH,EAAMuF,cAAc,WAAY,IAChCvF,EAAM2C,eAAe/D,KAAKyB,SAAL,SAA2BzB,KAAKyB,SAAL,QAChDL,EAAMrF,MAAM0J,YAEZrE,EAAMuF,cAAc,WAAY3G,KAAKyB,UAEvCL,EAAMgC,SAAS,CAACN,WAAW,MAG/B7B,EAAQU,KAAK,OAAQ,sCACrBV,EAAQW,KAAKf,IA1CI,EA8CnBkD,eAAiB,SAACE,EAAU5G,GAC1B,IAAIc,EAAGE,EACHxB,EAAQqH,SAAS,EAAKnI,MAAMoI,YAC5BrH,EAASoH,SAAS,EAAKnI,MAAMqI,aAC7BC,EAAQ,GAGZ,IAAIlG,EAAE,EAAGA,EAAItB,EAAOsB,IAElB,IADAkG,EAAMlG,GAAK,GACPE,EAAE,EAAGA,EAAIvB,EAAQuB,IACnBgG,EAAMlG,GAAGE,IAAM4F,EAKnB,IAAI9F,EAAE,EAAGA,EAAId,EAAOe,OAAQD,IAAK,CAC/B,IAAIU,EAAIxB,EAAOc,GAAG,GACde,EAAI7B,EAAOc,GAAG,GAElBkG,EAAMxF,GAAGK,GAAK+E,EAGhB,EAAK0C,cAAc,cAAetC,IApEjB,EAuEnBsC,cAAgB,SAACpI,EAAMC,GACrB,EAAKzC,MAAM6K,iBAAX,eAA8BrI,EAAOC,KAxEpB,EA2EnBqI,gBAAkB,SAAApK,GAChB,EAAKV,MAAM6K,iBAAX,eAA8BnK,EAAMsB,OAAOQ,KAAO9B,EAAMsB,OAAOS,SA5E9C,EA+EnB8F,eAAiB,WACf,EAAKX,kBA7EL,EAAKa,MAAQ,CACX1B,WAAW,EACXH,eAAgB,wCAGlB,EAAKgE,cAAgB,EAAKA,cAAc5G,KAAnB,gBACrB,EAAKgE,eAAiB,EAAKA,eAAehE,KAApB,gBATL,E,sEAoFjB,OACE,6BACE,kBAAC,EAAD,CACE+C,UAAW9C,KAAKwE,MAAM1B,UACtBH,eAAgB3C,KAAKwE,MAAM7B,iBAG7B,2BAAOV,QAAQ,gBAAf,uBACA,yBAAKC,UAAU,oBACb,2BAAOI,KAAK,OACVC,GAAG,eACHhE,KAAK,eACL2D,UAAU,eACVM,SAAUxC,KAAK6G,gBACfrI,MAAOwB,KAAKjE,MAAMsH,OAAOQ,gBAG7B,6BAEA,2BAAO5B,QAAQ,gBAAf,qBACA,yBAAKC,UAAU,oBACb,2BAAOI,KAAK,OACVC,GAAG,eACHhE,KAAK,eACL2D,UAAU,eACVM,SAAUxC,KAAK6G,gBACfrI,MAAOwB,KAAKjE,MAAMsH,OAAOO,gBAK7B,yBAAK1B,UAAU,mBACb,4BAAQI,KAAK,SAASJ,UAAU,kBAAkB9B,QAASJ,KAAKsE,gBAAhE,yB,GArHsBhE,aC8EjB2G,E,2MA7EbC,oBAAsB,SAAAzK,GACpB,IACM+B,EADS/B,EAAMsB,OACAS,MAErB,EAAKzC,MAAM+H,YAAY,CACrB2C,cAAejI,EACf2I,WAAY3I,K,wEAKd,OACE,6BACE,wBAAI0D,UAAU,QAAd,oBACA,6FAEA,yBAAKA,UAAU,aACb,4BAAQI,KAAK,SAASJ,UAAU,oBAAoB9B,QAASJ,KAAKjE,MAAMqL,aAAxE,2BAGF,2BAAOnF,QAAQ,mBAAf,mCACA,yBAAKC,UAAU,oBACb,2BAAOI,KAAK,OACVC,GAAG,kBACHhE,KAAK,kBACL2D,UAAU,eACVM,SAAUxC,KAAKjE,MAAM8K,gBACrBrI,MAAOwB,KAAKjE,MAAMyK,mBAEtB,yBAAKtE,UAAU,aACb,yBAAKA,UAAU,qDACb,2BAAOI,KAAK,QAAQC,GAAG,UAAUL,UAAU,uBACzC3D,KAAK,gBACLC,MAAM,KACN6I,QAAsC,OAA7BrH,KAAKjE,MAAM0K,cACpBjE,SAAUxC,KAAKkH,sBACjB,2BAAOhF,UAAU,uBAAuBD,QAAQ,WAAhD,OAEF,yBAAKC,UAAU,qDACb,2BAAOI,KAAK,QAAQC,GAAG,UAAUL,UAAU,uBACzC3D,KAAK,gBACLC,MAAM,KACN6I,QAAsC,OAA7BrH,KAAKjE,MAAM0K,cACpBjE,SAAUxC,KAAKkH,sBACjB,2BAAOhF,UAAU,uBAAuBD,QAAQ,WAAhD,OAEF,yBAAKC,UAAU,qDACb,2BAAOI,KAAK,QAAQC,GAAG,SAASL,UAAU,uBACxC3D,KAAK,gBACLC,MAAM,IACN6I,QAAsC,MAA7BrH,KAAKjE,MAAM0K,cACpBjE,SAAUxC,KAAKkH,sBACjB,2BAAOhF,UAAU,uBAAuBD,QAAQ,UAAhD,MAEF,yBAAKC,UAAU,qDACb,2BAAOI,KAAK,QAAQC,GAAG,UAAUL,UAAU,uBACzC3D,KAAK,gBACLC,MAAM,KACN6I,QAAsC,OAA7BrH,KAAKjE,MAAM0K,cACpBjE,SAAUxC,KAAKkH,sBACjB,2BAAOhF,UAAU,uBAAuBD,QAAQ,WAAhD,OAEF,yBAAKC,UAAU,qDACb,2BAAOI,KAAK,QAAQC,GAAG,UAAUL,UAAU,uBACzC3D,KAAK,gBACLC,MAAM,KACN6I,QAAsC,OAA7BrH,KAAKjE,MAAM0K,cACpBjE,SAAUxC,KAAKkH,sBACjB,2BAAOhF,UAAU,uBAAuBD,QAAQ,WAAhD,a,GAtEkB5B,IAAMC,WC8ErBgH,E,YA5Eb,WAAYvL,GAAQ,IAAD,8BACjB,4CAAMA,KAQRwL,cAAgB,WACd,EAAKnE,SAAS,CAACN,WAAW,IAI1B,IAAIjC,EAAO,IAAIC,SACfD,EAAKE,OAAO,kBAAmB,EAAKhF,MAAMsH,OAAOC,eACjDzC,EAAKE,OAAO,mBAAoB,EAAKhF,MAAMsH,OAAOE,gBAClD1C,EAAKE,OAAO,eAAgB,EAAKhF,MAAMsH,OAAOG,aAC9C3C,EAAKE,OAAO,eAAgB,EAAKhF,MAAMsH,OAAOI,aAC9C5C,EAAKE,OAAO,gBAAiB,EAAKhF,MAAMsH,OAAOO,cAC/C/C,EAAKE,OAAO,gBAAiB,EAAKhF,MAAMsH,OAAOQ,cAC/ChD,EAAKE,OAAO,cAAe,KAE3B,IAAIyG,EAAgB,UAAM,EAAKzL,MAAMsH,OAAO/F,aAAauB,EAArC,YAA0C,EAAK9C,MAAMsH,OAAO/F,aAAa4B,GAC7FsI,GAAgB,WAAQ,EAAKzL,MAAMsH,OAAO7F,aAAaqB,EAAvC,YAA4C,EAAK9C,MAAMsH,OAAO7F,aAAa0B,GAE3F,IAAIuI,EAAkB,UAAM,EAAK1L,MAAMsH,OAAO3F,WAAWmB,EAAnC,YAAwC,EAAK9C,MAAMsH,OAAO3F,WAAWwB,GAC3FuI,GAAkB,WAAQ,EAAK1L,MAAMsH,OAAOzF,WAAWiB,EAArC,YAA0C,EAAK9C,MAAMsH,OAAOzF,WAAWsB,GAEzF2B,EAAKE,OAAO,mBAAoByG,GAChC3G,EAAKE,OAAO,mBAAoB,EAAKhF,MAAMsH,OAAOmD,iBAClD3F,EAAKE,OAAO,qBAAsB0G,GAElC,IAAIxG,EAAU,IAAIC,eACdE,EAAK,eACTH,EAAQI,mBAAqB,WACJ,IAApBrB,KAAKsB,aACa,MAAhBtB,KAAKuB,QAENH,EAAMrF,MAAM2L,eAAe,CACzBpB,kBAAmBxH,KAAKC,MAAM4I,KAAKC,MAAM5H,KAAK+G,cAAhB,UAA2Cc,aAK7EzG,EAAMgC,SAAS,CAACN,WAAW,MAG/B7B,EAAQU,KAAK,OAAQ,2CACrBV,EAAQW,KAAKf,IA9Cb,EAAK2D,MAAQ,CACX1B,WAAW,EACXH,eAAgB,iDALD,E,sEAqDjB,OACE,6BACE,kBAAC,EAAD,CACEG,UAAW9C,KAAKwE,MAAM1B,UACtBH,eAAgB3C,KAAKwE,MAAM7B,iBAG7B,wBAAIT,UAAU,QAAd,qBACA,sGAEA,yBAAKA,UAAU,aACb,4BAAQI,KAAK,SAASJ,UAAU,oBAAoB9B,QAASJ,KAAKjE,MAAMqL,aAAxE,6BAGF,yBAAKlF,UAAU,qDACb,qDACA,4BAAQI,KAAK,SAASJ,UAAU,kBAAkB9B,QAASJ,KAAKuH,eAAhE,iB,GAtEkBlH,IAAMC,WCoJnBwH,E,2MA5IbV,YAAc,WAAO,IAAD,EAClB,EAAKrL,MAAM+H,aAAX,mBACG,EAAK/H,MAAMiB,WAAa,MAAQ,IADnC,cAEG,EAAKjB,MAAMiB,WAAa,MAAQ,IAFnC,K,EAMF6J,gBAAkB,SAAApK,GAChB,IAAMsB,EAAStB,EAAMsB,OACfS,EAAwB,aAAhBT,EAAOuE,KAAsBvE,EAAOsJ,QAAUtJ,EAAOS,MAC7DD,EAAOR,EAAOQ,KAEpB,EAAKxC,MAAM+H,YAAX,eACGvF,EAAOC,K,wEAKV,OACE,kBAACoE,EAAA,EAAD,CAAiBC,UAAW,MACG,IAA3B7C,KAAKjE,MAAM2J,aAAgD,IAA3B1F,KAAKjE,MAAM2J,aAAgD,IAA3B1F,KAAKjE,MAAM2J,aAC3E,kBAAC3C,EAAA,EAAD,CAAegC,IAAI,UAAU/B,WAAW,QAAQC,QAAS,KACzD,yBAAKf,UAAU,4CACb,yBAAKA,UAAU,uBAGb,kBAACU,EAAA,EAAD,CAAiBC,UAAW,MACG,IAA3B7C,KAAKjE,MAAM2J,aACX,kBAAC3C,EAAA,EAAD,CAAegC,IAAI,QAAQ/B,WAAW,YAAYC,QAAS,KACzD,yBAAKf,UAAU,qBACb,yBAAKA,UAAU,QACb,0BAAMA,UAAU,sCAAsC9B,QAASJ,KAAKjE,MAAMsJ,mBACxE,yBAAKnD,UAAU,OAAOpE,IAAKwH,IAAYL,IAAI,MAD7C,UAKF,wBAAI/C,UAAU,QAAd,mBACA,kBAAC,EAAD,CACEiE,UAAWnG,KAAKjE,MAAMsH,OAAOC,cAC7BE,YAAaxD,KAAKjE,MAAMsH,OAAOG,YAC/BC,YAAazD,KAAKjE,MAAMsH,OAAOI,YAC/BmD,iBAAkB5G,KAAKjE,MAAM+H,cAG/B,yBAAK5B,UAAU,mBACb,4BAAQI,KAAK,SAASJ,UAAU,6DAA6D9B,QAASJ,KAAKjE,MAAMiI,mBAAjH,YACW,yBAAK9B,UAAU,OAAOpE,IAAKmI,IAAiBhB,IAAI,UAQrE,kBAACrC,EAAA,EAAD,CAAiBC,UAAW,MACG,IAA3B7C,KAAKjE,MAAM2J,aACX,kBAAC3C,EAAA,EAAD,CAAegC,IAAI,QAAQ/B,WAAW,YAAYC,QAAS,KACzD,yBAAKf,UAAU,qBACb,yBAAKA,UAAU,QACb,0BAAMA,UAAU,sCAAsC9B,QAASJ,KAAKjE,MAAMsJ,mBACxE,yBAAKnD,UAAU,OAAOpE,IAAKwH,IAAYL,IAAI,KAD7C,UAKF,kBAAC,EAAD,CACE5B,OAAQrD,KAAKjE,MAAMsH,OACnBuD,iBAAkB5G,KAAKjE,MAAM+H,YAC7BC,eAAgB/D,KAAKjE,MAAM+H,YAC3BK,WAAYnE,KAAKjE,MAAMgM,iBAAiBC,YACxC5D,YAAapE,KAAKjE,MAAMgM,iBAAiBE,aACzC9K,YAAa6C,KAAKjE,MAAMgM,iBAAiB5K,YACzCsI,SAAUzF,KAAKjE,MAAMiI,kBACrBxC,SAAU,QAQpB,kBAACoB,EAAA,EAAD,CAAiBC,UAAW,MACC,IAA3B7C,KAAKjE,MAAM2J,aACX,kBAAC3C,EAAA,EAAD,CAAegC,IAAI,QAAQ/B,WAAW,YAAYC,QAAS,KACzD,yBAAKf,UAAU,qBACb,yBAAKA,UAAU,QACb,0BAAMA,UAAU,sCAAsC9B,QAASJ,KAAKjE,MAAMsJ,mBACxE,yBAAKnD,UAAU,OAAOpE,IAAKwH,IAAYL,IAAI,KAD7C,UAKF,kBAAC,EAAD,CACEuB,gBAAiBxG,KAAKjE,MAAMyK,gBAC5BY,YAAapH,KAAKoH,YAClBX,cAAezG,KAAKjE,MAAM0K,cAC1BI,gBAAiB7G,KAAK6G,gBACtB/C,YAAa9D,KAAKjE,MAAM+H,cAG1B,yBAAK5B,UAAU,mBACb,4BAAQI,KAAK,SAASJ,UAAU,6DAA6D9B,QAASJ,KAAKjE,MAAMiI,mBAAjH,YACW,yBAAK9B,UAAU,OAAOpE,IAAKmI,IAAiBhB,IAAI,UAQnE,kBAACrC,EAAA,EAAD,CAAiBC,UAAW,MACa,IAA3B7C,KAAKjE,MAAM2J,aACvB,kBAAC3C,EAAA,EAAD,CAAegC,IAAI,QAAQ/B,WAAW,YAAYC,QAAS,KACzD,yBAAKf,UAAU,qBACb,yBAAKA,UAAU,QACb,0BAAMA,UAAU,sCAAsC9B,QAASJ,KAAKjE,MAAMsJ,mBACxE,yBAAKnD,UAAU,OAAOpE,IAAKwH,IAAYL,IAAI,KAD7C,UAKF,kBAAC,EAAD,CACE5B,OAAQrD,KAAKjE,MAAMsH,OACnBqE,eAAgB1H,KAAKjE,MAAM+H,YAC3BsD,YAAapH,KAAKoH,YAClB3B,SAAUzF,KAAKjE,MAAMiI,kBACrBxC,SAAU,gB,GA7HVlB,a,iBCsNP4H,G,kBAvNb,WAAYnM,GAAQ,IAAD,8BACjB,4CAAMA,KA4BRoM,QAAU,WACR,EAAK/E,SAAS,CACZ2C,UAAW,GACXzC,cAAe,GACf0C,WAAY,GACZzC,eAAgB,GAChBC,YAAa,GACbC,YAAa,GACbG,aAAc,GACdC,aAAc,GACdvG,aAAc,GACdE,aAAc,GACdgJ,gBAAiB,GACjB9I,WAAY,GACZE,WAAY,GACZ0I,kBAAmB,GACnBC,YAAa,KACbE,cAAe,KACfzJ,WAAY,OACZgL,YAAa,IACbC,aAAc,IACd9K,YAAa,GACbuI,YAAa,EACblE,SAAU,MApDK,EAwDnB4G,kBAAoB,SAAAvG,GAClB,EAAKuB,SAASvB,IAzDG,EA4DnBwG,aAAe,SAAA5L,GACb,EAAK2G,SAAL,eAAgB3G,EAAMsB,OAAOQ,KAAO9B,EAAMsB,OAAOS,SA7DhC,EAgEnB6G,kBAAoB,WAClB,IAAMiD,EAAO,EAAK9D,MAAMkB,YAAc,EAChCG,EAAO/G,KAAK8G,IAAI,EAAG0C,GACrB5J,EAAO,OAEC,IAATmH,IACDnH,EAAO,aACG,IAATmH,IACDnH,EAAO,WAET,EAAK0E,SAAS,CACZsC,YAAaG,EACb7I,WAAY0B,KA5EG,EAgFnBsF,kBAAoB,WAClB,IAAMuE,EAAO,EAAK/D,MAAMkB,YAAc,EAChCG,EAAO/G,KAAK0J,IAAI,EAAGD,GACrB7J,EAAO,OAEC,IAATmH,IACDnH,EAAO,aACG,IAATmH,IACDnH,EAAO,WAET,EAAK0E,SAAS,CACZsC,YAAaG,EACb7I,WAAY0B,KA5FG,EAgGnB+J,eAAiB,WACf,IAAIrK,EAAS,EAAKoG,MAAM8B,kBACxB,GAAe,KAAXlI,EAAe,OAAOA,EAE1B,IAAImI,EAAc,EAAK/B,MAAM+B,YACzBE,EAAgB,EAAKjC,MAAMiC,cAK/B,OAHArI,EAASsK,IAAQtK,GAAQuK,KAAKlC,GAAemC,GAAGrC,GAChDnI,EAASU,KAAKC,MAAe,IAATX,GAAgB,KAtGpC,EAAKoG,MAAQ,CACXxD,QAAS6H,KAAKC,MACd/C,UAAW,GACXzC,cAAe,GACf0C,WAAY,GACZzC,eAAgB,GAChBC,YAAa,GACbC,YAAa,GACbG,aAAc,GACdC,aAAc,GACdvG,aAAc,GACdE,aAAc,GACdgJ,gBAAiB,GACjB9I,WAAY,GACZE,WAAY,GACZ0I,kBAAmB,GACnBC,YAAa,KACbE,cAAe,KACfzJ,WAAY,OACZgL,YAAa,IACbC,aAAc,IACd9K,YAAa,GACbuI,YAAa,EACblE,SAAU,IAzBK,E,sEA8GjB,IAAM8E,EAAoBtG,KAAKyI,iBACzB9H,EAAQ,CACNK,QAAShB,KAAKwE,MAAMxD,QACpB+E,UAAW/F,KAAKwE,MAAMuB,UACtBC,WAAYhG,KAAKwE,MAAMwB,WACvB1C,cAAetD,KAAKwE,MAAMlB,cAC1BC,eAAgBvD,KAAKwE,MAAMjB,gBAE7B6C,EAAa,CACX9I,aAAc0C,KAAKwE,MAAMlH,aACzBE,aAAcwC,KAAKwE,MAAMhH,aACzBE,WAAYsC,KAAKwE,MAAM9G,WACvBE,WAAYoC,KAAKwE,MAAM5G,YAEzByF,EAAS,CACPC,cAAetD,KAAKwE,MAAMlB,cAC1BC,eAAgBvD,KAAKwE,MAAMjB,eAC3BC,YAAaxD,KAAKwE,MAAMhB,YACxBC,YAAazD,KAAKwE,MAAMf,YACxBG,aAAc5D,KAAKwE,MAAMZ,aACzBC,aAAc7D,KAAKwE,MAAMX,aACzBvG,aAAc0C,KAAKwE,MAAMlH,aACzBE,aAAcwC,KAAKwE,MAAMhH,aACzBgJ,gBAAiBxG,KAAKwE,MAAMgC,gBAC5B9I,WAAYsC,KAAKwE,MAAM9G,WACvBE,WAAYoC,KAAKwE,MAAM5G,YAEzBmK,EAAmB,CACjBzB,kBAAmBtG,KAAKwE,MAAM8B,kBAC9B0B,YAAahI,KAAKwE,MAAMwD,YACxBC,aAAcjI,KAAKwE,MAAMyD,aACzB9K,YAAa6C,KAAKwE,MAAMrH,aAG1B+I,EACA,yBAAKhE,UAAU,qEACb,wBAAIA,UAAU,yBAAd,mBACA,yBAAKA,UAAU,eACb,4BAAQA,UAAU,gBAAgB3D,KAAK,cAAcC,MAAOwB,KAAKwE,MAAM+B,YAAa/D,SAAUxC,KAAKqI,cACjG,4BAAQ7J,MAAM,MAAd,MACA,4BAAQA,MAAM,MAAd,MACA,4BAAQA,MAAM,KAAd,KACA,4BAAQA,MAAM,MAAd,UACA,4BAAQA,MAAM,MAAd,WAKZ,OACE,yBAAK0D,UAAU,OACb,gCACE,yBAAKA,UAAU,oBACb,yBAAKA,UAAU,sEACb,0BAAMA,UAAU,iCAAiC9B,QAASJ,KAAKmI,SAC7D,yBAAKrK,IAAI,WAAWmH,IAAI,uBAGvBjF,KAAKwE,MAAMkB,YAAc,GACxB,0BAAMxD,UAAU,8DAA8D9B,QAASJ,KAAKmI,SAC1F,yBAAKrK,IAAKiL,IAAY7G,UAAU,kBAAkB+C,IAAI,SADxD,kBAQV,yBAAK/C,UAAU,uCAEb,kBAAC,EAAD,CACEvB,MAAOA,EACP0C,OAAQA,EACRiD,kBAAmBA,EACnBC,YAAavG,KAAKwE,MAAM+B,YACxBC,gBAAiBxG,KAAKwE,MAAMgC,gBAC5BC,cAAezG,KAAKwE,MAAMiC,cAC1BjD,YAAaxD,KAAKwE,MAAMhB,YACxBC,YAAazD,KAAKwE,MAAMf,YACxBrB,YAAapC,KAAKwE,MAAMwD,YACxB3B,aAAcrG,KAAKwE,MAAMyD,aACzBjL,WAAYgD,KAAKwE,MAAMxH,WACvBG,YAAa6C,KAAKwE,MAAMrH,YACxBiJ,WAAYA,EACZV,YAAa1F,KAAKwE,MAAMkB,YACxB5B,YAAa9D,KAAKoI,kBAClBpE,kBAAmBhE,KAAKgE,kBACxBqB,kBAAmBrF,KAAKqF,kBACxBa,YAAaA,IAGf,kBAAC,EAAD,CACE7C,OAAQA,EACR0E,iBAAkBA,EAClB/K,WAAYgD,KAAKwE,MAAMxH,WACvB0I,YAAa1F,KAAKwE,MAAMkB,YACxB5B,YAAa9D,KAAKoI,kBAClB3B,cAAezG,KAAKwE,MAAMiC,cAC1BzC,kBAAmBhE,KAAKgE,kBACxBqB,kBAAmBrF,KAAKqF,0B,GAhNlB/E,cCDlB0I,IAASC,OAAO,yBAAK1G,GAAG,iBAAgB,kBAAC,EAAD,OAAe2G,SAASC,eAAe,U,kBCN/EvN,EAAOC,QAAU,IAA0B,yC","file":"static/js/main.ed0d7566.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/AngleRightWhite.b30c9f00.svg\";","module.exports = __webpack_public_path__ + \"static/media/RedoCircle.b43f3016.svg\";","import React, { Component } from 'react';\n\nclass Canvas extends React.Component {  \n  constructor(props) {\n    super(props);\n    this.updateValue = this.updateValue.bind(this);\n    this.setPoint = this.setPoint.bind(this);\n  }\n\n  componentDidMount() {\n    this.setImage(this.props.file)\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    if (\n      nextProps.file !== this.props.file ||\n      nextProps.validPoints !== this.props.validPoints ||\n      nextProps.points !== this.props.points\n    ) {\n      return true;\n    }\n\n    return false;\n  }\n\n  componentDidUpdate() {\n    this.setImage(this.props.file)\n  }\n\n  // Renders image and points\n  setImage = file => {\n    const canvas = this.refs.canvas\n    const ctx = canvas.getContext(\"2d\")\n\n    var reader = new FileReader();\n    reader.onload = event => {\n        var img = new Image();\n        img.onload = () => {\n          let imageRatio = this.props.width / img.width\n          canvas.width = img.width * imageRatio\n          canvas.height = img.height * imageRatio\n          ctx.drawImage(img, 0, 0, canvas.width, canvas.height)\n\n          if (this.props.canvasMode !== \"imageRight\") {\n            this.updateValue('image_height', canvas.height)\n          }\n\n          this.renderValidPoints(ctx, this.props.validPoints, canvas.width, canvas.height)\n\n          let refpt1 = this.props.points.referencePt1,\n              refpt2 = this.props.points.referencePt2,\n              measurept1 = this.props.points.measurePt1,\n              measurept2 = this.props.points.measurePt2\n\n          this.renderPts(ctx, refpt1, refpt2, measurept1, measurept2)\n        }\n        img.src = event.target.result\n    }\n    reader.readAsDataURL(file)\n  }\n\n  renderValidPoints = (ctx, validPoints) => {\n    if (validPoints === '') return null;\n\n    ctx.fillStyle = \"black\";\n    for (let i = 0; i < validPoints.length; i++) {\n      for (let j = 0; j < validPoints[i].length; j++) {\n        if(validPoints[i][j] === false) {\n          ctx.fillRect(i,j,1,1);\n        }\n      }\n    }\n  }\n\n  updateValue = (name, value) => {\n    this.props.updateValue({[name]: value})\n  }\n\n  // Sets points on canvas\n  setPoint = event => {\n    const mode = this.props.canvasMode;\n\n    if (mode === 'view') return null;\n\n    const canvas = this.refs.canvas;\n    let coord = canvas.getBoundingClientRect();\n    let x = Math.round(event.clientX - coord.left);\n    let y = Math.round(event.clientY - coord.top);\n\n    if(!this.props.validPoints[x][y]) return null;\n\n    let points = this.props.points;\n    let point = mode + 'Pt1';\n    \n    if (points[point] !== '') {\n      point = mode + 'Pt2';\n\n      if (points[point] !== '') {\n        let newP1 = mode + 'Pt1';\n        let newP1x = points[point].x;\n        let newP1y = points[point].y;\n\n        this.props.setPoint(newP1, newP1x, newP1y);\n      }\n    }\n\n    this.props.setPoint(point, x, y);\n  }\n\n  renderPts = (ctx, refpt1, refpt2, measurept1, measurept2) => {\n    ctx.lineWidth = 3;\n    \n    if(refpt1 !== ''){\n      ctx.fillStyle = \"blue\";\n      ctx.fillRect(refpt1.x,refpt1.y,1,1);\n    }\n    if(refpt2 !== ''){\n      ctx.fillStyle = \"blue\";\n      ctx.fillRect(refpt2.x,refpt2.y,1,1);\n      ctx.beginPath();\n      ctx.moveTo(refpt1.x, refpt1.y);\n      ctx.lineTo(refpt2.x, refpt2.y);\n      ctx.strokeStyle = \"blue\";\n      ctx.stroke();\n    }\n\n    if(measurept1 !== ''){\n      ctx.fillStyle = \"red\";\n      ctx.fillRect(measurept1.x,measurept1.y,1,1);\n    }\n    if(measurept2 !== ''){\n      ctx.fillStyle = \"red\";\n      ctx.fillRect(measurept2.x,measurept2.y,1,1);\n      ctx.beginPath();\n      ctx.moveTo(measurept1.x, measurept1.y);\n      ctx.lineTo(measurept2.x, measurept2.y);\n      ctx.strokeStyle = \"red\";\n      ctx.stroke();\n    }\n  }\n\n  render() {\n    return(\n      <canvas \n        ref=\"canvas\" \n        width={this.props.width} \n        height={250} \n        onClick={this.setPoint}\n      />\n    )\n  }\n}\n\nclass StereoImage extends Component {\n  constructor(props) {\n    super(props);\n    this.changeImage = this.changeImage.bind(this);\n    this.setPoint = this.setPoint.bind(this);\n  }\n\n  setPoint = (point, x, y) => {\n    this.props.setPoint(point, x, y)\n  }\n\n  changeImage = event => {\n    this.props.onImageChange({\n      [this.props.idName]: event.target.files[0]\n    });\n\n    this.uploadImage(event.target.files[0]);\n  }\n\n  uploadImage = file => {\n    let form = new FormData();\n    form.append('image', file);\n    form.append('session_id', this.props.session);\n    \n    let request = new XMLHttpRequest();\n    request.responseType = 'json';\n    let react = this;\n    request.onreadystatechange = function() {\n      if(this.readyState === 4) {\n        if(this.status === 200) {\n          react.updateValue({errorLog: ''});\n          react.updateValue({[react.props.idName + 'Name']: this.response['name']});\n        } else {\n          react.updateValue({errorLog: this.response});\n        }\n        react.updateValue({waiting: false});\n      }\n    };\n    request.open(\"POST\", \"http://localhost:9000/upload\");\n    request.send(form);\n  }\n\n  updateValue = newState => {\n    this.props.onImageChange(newState)\n  }\n\n  clearImage = event => {\n    this.props.onImageChange({\n      [this.props.idName]: \"\"\n    })\n  }\n\n  render() {\n    let upload;\n    if (this.props.image === \"\") {\n      upload = <label htmlFor={this.props.idName} className=\"upload-box clickable d-flex justify-content-center align-items-center\"\n                  style={{width: this.props.resizeWidth+'px'}}>\n                  <div>{this.props.labelText}</div>\n                </label>;\n    } else {\n      upload = \n        <span className=\"canvaspane\">\n          <Canvas \n            width={this.props.resizeWidth} \n            file={this.props.image} \n            canvasMode={this.props.canvasMode} \n            points={this.props.points}\n            validPoints={this.props.validPoints}\n            setPoint={this.setPoint}\n            updateValue={this.updateValue}\n          /><br/>\n          <label onClick={this.clearImage} htmlFor={this.props.idName}>Clear Image</label>\n        </span>\n    }\n\n    return (\n      <span>\n        {upload}\n        <input \n          type=\"file\" \n          id={this.props.idName} \n          name={this.props.idName} \n          onChange={this.changeImage}\n          className=\"inputfile\"\n          accept=\".jpg,.png\"\n        />\n      </span>\n    );\n  }\n}\n\nexport default StereoImage;\n","import React, { Component } from 'react';\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\n\nclass LoadingScreen extends Component {\n\n  render() {\n    const loadingMessage = <p>{this.props.loadingMessage}</p>\n\n    return (\n      <TransitionGroup component={null}>\n\n        {this.props.isLoading && (\n          <CSSTransition classNames=\"fade\" timeout={300}>\n            <div className=\"loading\">\n              <div className=\"arc\"></div>\n              <div className=\"innerarc\"></div>\n              <div className=\"loading-text\">\n                {loadingMessage}\n              </div>\n            </div>\n          </CSSTransition>\n        )}\n      </TransitionGroup>\n    );\n  }\n}\n\nexport default LoadingScreen;\n","import React, { Component } from 'react';\nimport LoadingScreen from './LoadingScreen';\nimport angleright from '../icons/AngleRight.svg';\n\nclass DisparityMaps extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      images: ['','','','','','','','',''],\n      errorLog: '',\n      isLoading: false,\n      loadingMessage: 'Creating disparity maps...'\n    }\n\n    this.setValidPoints = this.setValidPoints.bind(this);\n  }\n\n  componentDidMount() {\n    this.getDisparityMaps();\n  }\n\n  getDisparityMaps = () => {\n    this.setState({isLoading: true});\n\n    // TODO: Do local data validation\n    \n    let form = new FormData();\n    form.append('image_left_name', this.props.params.imageLeftName);\n    form.append('image_right_name', this.props.params.imageRightName);\n    form.append('focal_length', this.props.params.focalLength);\n    form.append('sensor_width', this.props.params.sensorWidth);\n    form.append('session_id', this.props.session);\n    \n    let request = new XMLHttpRequest();\n    request.responseType = 'json';\n    let react = this;\n    request.onreadystatechange = function() {\n      if(this.readyState === 4) {\n        if(this.status === 200) {\n          react.setState({errorLog: ''});\n          react.setState({images: this.response});\n        } else {\n          react.setState({errorLog: this.response});\n        }\n        react.setState({isLoading: false});\n      }\n    };\n    request.open(\"POST\", \"http://localhost:9000/disparity_maps\");\n    request.send(form);\n  }\n\n  getValidPoints = () => {\n    this.setState({isLoading: true});\n\n    // TODO: Do local data validation\n    \n    let form = new FormData();\n    form.append('image_left_name', this.props.params.imageLeftName);\n    form.append('image_right_name', this.props.params.imageRightName);\n    form.append('focal_length', this.props.params.focalLength);\n    form.append('sensor_width', this.props.params.sensorWidth);\n    form.append('min_disparity', this.props.params.minDisparity);\n    form.append('num_disparity', this.props.params.numDisparity);\n    form.append('window_size', '9');\n    \n    let request = new XMLHttpRequest();\n    request.responseType = 'json';\n    let react = this;\n    request.onreadystatechange = function() {\n      if(this.readyState === 4) {\n        if(this.status === 200) {\n          react.props.updateState({errorLog: this.response});\n          react.setValidPoints(this.response[\"is_valid\"], this.response[\"points\"]);\n          react.props.handleOnclickNext()\n        } else {\n          this.props.updateState({errorLog: this.response});\n        }\n        react.setState({isLoading: false});\n      }\n    };\n    request.open(\"POST\", \"http://localhost:9000/valid_points\");\n    request.send(form);\n  }\n\n\n  setValidPoints = (is_valid, points) => {\n    let i, j,\n        width = parseInt(this.props.imageWidth),\n        height = parseInt(this.props.imageHeight);\n    let array = [];\n\n    // Set initial valid values for points\n    for(i=0; i < width; i++) {\n      array[i] = [];\n      for(j=0; j < height; j++) {\n        array[i][j] = !is_valid;\n      }\n    }\n\n    // Set valid/invalid points\n    for(i=0; i < points.length; i++) {\n      let x = points[i][0],\n          y = points[i][1];\n\n      array[x][y] = is_valid;\n    }\n    this.props.updateState({validPoints: array})\n  }\n\n  onClickHandler = () => {\n    this.getValidPoints();\n  }\n\n  setDisparity = (minDisparity, numDisparity) => {\n    this.props.updateState({\n      minDisparity: parseInt(minDisparity),\n      numDisparity: parseInt(numDisparity),\n    })\n    this.getValidPoints()\n  }\n\n  render() {\n    const disparityStyle = {\n      width: this.props.mapWidth+'px',\n      height: this.props.mapHeight+'px'\n    };\n\n    const images = this.state.images;\n    const disparitymaps = images.map((image, index) =>\n      <div className=\"col-4 p-3\" key={index} >\n          {typeof(image.image_name) === 'undefined'&& (\n            <div className=\"disparity-map\" style={disparityStyle}>\n            </div>\n          )}\n          {typeof(image.image_name) !== 'undefined'&& (\n            <div className=\"disparity-map active\" style={disparityStyle}>\n              <img \n                src={'http://localhost:9000/images/' + image.image_name} \n                alt={\"Min Disparities: \" + image.min_disparity + \", # of Disparities: \" + image.num_disparity} \n                title={\"Min Disparities: \" + image.min_disparity + \", # of Disparities: \" + image.num_disparity}\n                onClick={this.setDisparity.bind(null, image.min_disparity,image.num_disparity)}\n              />\n            </div>\n          )}\n      </div>\n    );\n\n    return (\n      <div>\n        <LoadingScreen \n          isLoading={this.state.isLoading}\n          loadingMessage={this.state.loadingMessage}\n        />\n        <div className=\"mb-5\">\n          <span className=\"clickable d-flex align-items-center\" onClick={this.props.handleOnclickBack}>\n            <img className=\"mr-3\" src={angleright} alt=\"\"/> Back\n          </span>\n        </div>\n        <div className=\"mb-3\">\n          <p>\n            Click image that appears to be the clearest (Where objects of interest look distinct)\n          </p>\n        </div>\n        <div className=\"disparity-maps row justify-content-between\">\n          {disparitymaps}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default DisparityMaps;\n","import React, { Component } from 'react';\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\nimport StereoImage from './StereoImage';\nimport DisparityMaps from './DisparityMaps';\nimport anglerightwhite from '../icons/AngleRightWhite.svg';\n\nclass ImagePanel extends Component {\n  constructor(props) {\n    super(props);\n    this.updateParentState = this.updateParentState.bind(this);\n  }\n\n  updateParentState = newState => {\n    this.props.updateState(newState);\n  }\n\n  handleOnclickNext = () => {\n    let nextStep = this.props.currentStep + 1;\n    this.changeCurrentStep(nextStep);\n  }\n\n  handleOnclickBack = () => {\n    let nextStep = this.props.currentStep - 1;\n    nextStep = Math.max(0, nextStep);\n    this.changeCurrentStep(nextStep);\n  }\n\n  changeCurrentStep = step => {\n    this.props.updateState({\n      currentStep: step\n    });\n  }\n\n  setPoint = (point, x, y) => {\n    this.props.updateState({\n      [point]: {\n        x: x,\n        y: y,\n      }\n    });\n  }\n\n  render() {\n    const imagesUploaded = (this.props.files.imageLeft !== '' && this.props.files.imageRight !== '')\n\n    return (\n      <div className=\"image-panel col d-flex justify-content-center\">\n        <div>\n            <div className=\"image-panel__header d-flex\">\n              <TransitionGroup component={null}>\n\n                {this.props.currentStep === 1 && !imagesUploaded && (\n                  <CSSTransition classNames=\"fade\" timeout={0}>\n                    <h2 className=\"mr-auto\">Please upload your matching left and right  images</h2>\n                  </CSSTransition>\n                )}\n\n                {this.props.currentStep === 1 && imagesUploaded && (\n                  <CSSTransition classNames=\"fade\" timeout={0}>\n                    <div className=\"text-right ml-auto\">\n                      <button type=\"button\" className=\"continue btn btn-primary d-flex align-items-center\" onClick={this.handleOnclickNext}>\n                        Continue <img className=\"ml-2\" src={anglerightwhite} alt=\">\"/>\n                      </button>\n                    </div>\n                  </CSSTransition>\n                )}\n\n                {this.props.currentStep > 4 && (\n                  <CSSTransition classNames=\"fade\" timeout={0}>\n                   {this.props.unitchanger}\n                  </CSSTransition>)}\n              </TransitionGroup>\n            </div>\n\n\n            \n          <TransitionGroup component={null}>\n            {this.props.currentStep !== 3 && (\n              <CSSTransition classNames=\"fade\" timeout={0}>\n                <div className=\"d-flex justify-content-between align-items-center mb-3\">\n                  <StereoImage \n                    session={this.props.files.session}\n                    idName=\"imageLeft\"\n                    image={this.props.files.imageLeft}\n                    imageName={this.props.files.imageRightName} \n                    labelText=\"Click to Upload Left Image\"\n                    resizeWidth={this.props.resizeWidth}\n                    onImageChange={this.updateParentState}\n                    canvasMode={this.props.canvasMode}\n                    points={this.props.userPoints}\n                    validPoints={this.props.validPoints}\n                    setPoint={this.setPoint}\n                  />\n\n                  <TransitionGroup component={null}>\n                    {this.props.currentStep === 1 && (\n                      <CSSTransition classNames=\"fade\" timeout={0}>\n                        <div className=\"ml-3\">\n                          <StereoImage \n                            session={this.props.files.session}\n                            idName=\"imageRight\"\n                            image={this.props.files.imageRight}\n                            imageName={this.props.files.imageRightName} \n                            labelText=\"Click to Upload Right Image\"\n                            resizeWidth={this.props.resizeWidth}\n                            onImageChange={this.updateParentState}\n                            canvasMode=\"imageRight\"\n                            points={this.props.userPoints}\n                            validPoints=\"\"\n                            setPoint={this.setPoint}\n                          />\n                        </div>\n                      </CSSTransition>\n                    )}\n                  </TransitionGroup>\n                </div>\n\n              </CSSTransition>\n            )}\n          </TransitionGroup>\n\n          {this.props.currentStep === 3 && (\n            <CSSTransition classNames=\"fade\" timeout={0}>\n              <DisparityMaps\n                session={this.props.files.session}\n                params={this.props.params}\n                imageWidth={this.props.resizeWidth}\n                imageHeight={this.props.resizeHeight}\n                mapWidth={this.props.resizeWidth/2}\n                mapHeight={this.props.resizeHeight/2}\n                updateState={this.props.updateState}\n                handleOnclickNext={this.props.handleOnclickNext}\n                handleOnclickBack={this.props.handleOnclickBack}\n              />\n            </CSSTransition>\n          )}\n          \n          { this.props.estimatedDistance !== '' &&\n          (<div className=\"parameter-box d-flex justify-content-between align-items-center mb-4\">\n                              <div>\n                                <span className=\"mr-5\"><strong className=\"mr-3\">Estimated Length:</strong> {this.props.estimatedDistance} {this.props.measureUnit}</span>\n                              </div>\n                              <div></div>\n                            </div>)\n          }\n\n          { this.props.currentStep > 3 &&\n          (<div className=\"parameter-box d-flex justify-content-between align-items-center mb-4\">\n                              <div>\n                                <span className=\"mr-5\"><strong className=\"mr-3\">Reference Length:</strong> {this.props.referenceLength} {this.props.referenceUnit}</span>\n                              </div>\n                              <div><button type=\"button\" className=\"btn btn-secondary\">Edit</button></div>\n                            </div>)\n          }\n\n          { this.props.currentStep > 2 &&\n            (<div className=\"parameter-box d-flex justify-content-between align-items-center mb-4\">\n                                  <div>\n                                    <span className=\"mr-5\"><strong className=\"mr-3\">Focal Length:</strong> {this.props.focalLength} mm</span>\n                                    <span><strong className=\"mr-3\">Sensor Width: {this.props.sensorWidth} mm</strong></span>\n                                  </div>\n                                  <div><button type=\"button\" className=\"btn btn-secondary\">Edit</button></div>\n                                </div>)\n          }\n\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ImagePanel;\n","import React, { Component } from 'react';\nimport LoadingScreen from './LoadingScreen';\n\nclass CameraSettings extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isLoading: false,\n      loadingMessage: 'Predicting Focal Length...'\n    };\n\n    this.changeSetting = this.changeSetting.bind(this);\n  }\n\n  predictFocal() {\n    this.setState({isLoading: true});\n\n    // TODO: Do local data validation\n\n    let form = new FormData();\n    form.append('image_name', this.props.imageName);\n    \n    let request = new XMLHttpRequest();\n    let react = this;\n    request.onreadystatechange = function() {\n      if(this.readyState === 4) {\n        if(this.status === 200) {\n          react.changeSetting(\"focalLength\", this.responseText);\n        } else {\n          react.changeSetting(\"errorLog\", this.responseText);\n        }\n        react.setState({isLoading: false});\n      }\n    };\n    request.open(\"POST\", \"http://localhost:9000/focal_length\");\n    request.send(form);\n  }\n\n  changeSetting = (name, value) => {\n    this.props.onSettingsChange({[name]: value});\n  }\n\n  onChangeHandler = event => {\n    this.props.onSettingsChange({[event.target.name]: event.target.value});\n  }\n\n  onClickHandler = event => {\n    this.predictFocal();\n  }\n\n  render() {\n    return (\n      <div>\n        <LoadingScreen \n          isLoading={this.state.isLoading}\n          loadingMessage={this.state.loadingMessage}\n        />\n\n        <label htmlFor=\"focalLength\">Focal Length</label>\n        <div className=\"input-group mb-3\">\n          <input type=\"text\" \n            id=\"focalLength\" \n            name=\"focalLength\" \n            className=\"form-control\" \n            onChange={this.onChangeHandler}\n            value={this.props.focalLength}/>\n          <div className=\"input-group-append\">\n            <span className=\"input-group-text\">mm</span>\n          </div>\n        </div>\n        <div className=\"d-flex justify-content-between align-items-center\">\n          <span>Don't know the focal length?</span>\n          <button type=\"button\" className=\"btn btn-secondary\" onClick={this.onClickHandler}>Predict for me</button>\n        </div>\n\n        <hr/>\n\n        <label htmlFor=\"sensorWidth\">Sensor Width</label>\n        <div className=\"input-group mb-3\">\n          <input type=\"text\" \n            id=\"sensorWidth\" \n            name=\"sensorWidth\" \n            className=\"form-control\" \n            onChange={this.onChangeHandler}\n            value={this.props.sensorWidth}/>\n          <div className=\"input-group-append\">\n            <span className=\"input-group-text\">mm</span>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default CameraSettings;\n","import React, { Component } from 'react';\nimport LoadingScreen from './LoadingScreen';\n\nclass DisparitySettings extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isLoading: false,\n      loadingMessage: 'Calculating valid points on image...'\n    };\n\n    this.changeSetting = this.changeSetting.bind(this);\n    this.setValidPoints = this.setValidPoints.bind(this);\n  }\n\n  getValidPoints = (minDisparity, numDisparity) => {\n    this.setState({isLoading: true});\n\n    // TODO: Do local data validation\n    \n    let form = new FormData();\n    form.append('image_left_name', this.props.params.imageLeftName);\n    form.append('image_right_name', this.props.params.imageRightName);\n    form.append('focal_length', this.props.params.focalLength);\n    form.append('sensor_width', this.props.params.sensorWidth);\n    form.append('min_disparity', minDisparity);\n    form.append('num_disparity', numDisparity);\n    form.append('window_size', '9');\n    \n    let request = new XMLHttpRequest();\n    request.responseType = 'json';\n    let react = this;\n    request.onreadystatechange = function() {\n      if(this.readyState === 4) {\n        if(this.status === 200) {\n          react.changeSetting('errorLog', '');\n          react.setValidPoints(this.response[\"is_valid\"], this.response[\"points\"]);\n          react.props.nextStep()\n        } else {\n          react.changeSetting('errorLog', this.response);\n        }\n        react.setState({isLoading: false});\n      }\n    };\n    request.open(\"POST\", \"http://localhost:9000/valid_points\");\n    request.send(form);\n  }\n\n\n  setValidPoints = (is_valid, points) => {\n    let i, j,\n        width = parseInt(this.props.imageWidth),\n        height = parseInt(this.props.imageHeight);\n    let array = [];\n\n    // Set initial valid values for points\n    for(i=0; i < width; i++) {\n      array[i] = [];\n      for(j=0; j < height; j++) {\n        array[i][j] = !is_valid;\n      }\n    }\n\n    // Set valid/invalid points\n    for(i=0; i < points.length; i++) {\n      let x = points[i][0],\n          y = points[i][1];\n\n      array[x][y] = is_valid;\n    }\n\n    this.changeSetting('validPoints', array);\n  }\n\n  changeSetting = (name, value) => {\n    this.props.onSettingsChange({[name]: value});\n  }\n\n  onChangeHandler = event => {\n    this.props.onSettingsChange({[event.target.name]: event.target.value});\n  }\n\n  onClickHandler = () => {\n    this.getValidPoints();\n  }\n\n  render() {\n    return (\n      <div>\n        <LoadingScreen \n          isLoading={this.state.isLoading}\n          loadingMessage={this.state.loadingMessage}\n        />\n\n        <label htmlFor=\"numDisparity\">Number of Disparity</label>\n        <div className=\"input-group mb-3\">\n          <input type=\"text\" \n            id=\"numDisparity\" \n            name=\"numDisparity\" \n            className=\"form-control\" \n            onChange={this.onChangeHandler}\n            value={this.props.params.numDisparity}/>\n        </div>\n\n        <hr/>\n\n        <label htmlFor=\"minDisparity\">Minimum Disparity</label>\n        <div className=\"input-group mb-3\">\n          <input type=\"text\" \n            id=\"minDisparity\" \n            name=\"minDisparity\" \n            className=\"form-control\" \n            onChange={this.onChangeHandler}\n            value={this.props.params.minDisparity}/>\n        </div>\n\n\n\n        <div className=\"text-right mt-5\">\n          <button type=\"button\" className=\"btn btn-primary\" onClick={this.onClickHandler}>Continue &rsaquo;</button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default DisparitySettings;\n","import React from 'react';\n\nclass ReferencePoints extends React.Component {\n\n  updateReferenceUnit = event => {\n    const target = event.target;\n    const value = target.value;\n\n    this.props.updateState({\n      referenceUnit: value,\n      measurenit: value\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <h2 className=\"mb-4\">Reference Length</h2>\n        <p>Click on the image to set two points for your reference length</p>\n\n        <div className=\"mt-4 mb-5\">\n          <button type=\"button\" className=\"btn btn-secondary\" onClick={this.props.clearPoints}>Clear Reference Points</button>\n        </div>\n\n        <label htmlFor=\"referenceLength\">Length of Reference Measurement</label>\n        <div className=\"input-group mb-3\">\n          <input type=\"text\" \n            id=\"referenceLength\" \n            name=\"referenceLength\" \n            className=\"form-control\" \n            onChange={this.props.onChangeHandler}\n            value={this.props.referenceLength}/>\n        </div>\n        <div className=\"text-left\">\n          <div className=\"custom-control custom-radio custom-control-inline\">\n            <input type=\"radio\" id=\"unit-mm\" className=\"custom-control-input\" \n              name=\"referenceUnit\"\n              value=\"mm\"\n              checked={this.props.referenceUnit === \"mm\"}\n              onChange={this.updateReferenceUnit}/>\n            <label className=\"custom-control-label\" htmlFor=\"unit-mm\">mm</label>\n          </div>\n          <div className=\"custom-control custom-radio custom-control-inline\">\n            <input type=\"radio\" id=\"unit-cm\" className=\"custom-control-input\" \n              name=\"referenceUnit\"\n              value=\"cm\"\n              checked={this.props.referenceUnit === \"cm\"}\n              onChange={this.updateReferenceUnit}/>\n            <label className=\"custom-control-label\" htmlFor=\"unit-cm\">cm</label>\n          </div>\n          <div className=\"custom-control custom-radio custom-control-inline\">\n            <input type=\"radio\" id=\"unit-m\" className=\"custom-control-input\" \n              name=\"referenceUnit\"\n              value=\"m\"\n              checked={this.props.referenceUnit === \"m\"}\n              onChange={this.updateReferenceUnit}/>\n            <label className=\"custom-control-label\" htmlFor=\"unit-m\">m</label>\n          </div>\n          <div className=\"custom-control custom-radio custom-control-inline\">\n            <input type=\"radio\" id=\"unit-in\" className=\"custom-control-input\" \n              name=\"referenceUnit\"\n              value=\"in\"\n              checked={this.props.referenceUnit === \"in\"}\n              onChange={this.updateReferenceUnit}/>\n            <label className=\"custom-control-label\" htmlFor=\"unit-in\">in</label>\n          </div>\n          <div className=\"custom-control custom-radio custom-control-inline\">\n            <input type=\"radio\" id=\"unit-ft\" className=\"custom-control-input\" \n              name=\"referenceUnit\"\n              value=\"ft\"\n              checked={this.props.referenceUnit === \"ft\"}\n              onChange={this.updateReferenceUnit}/>\n            <label className=\"custom-control-label\" htmlFor=\"unit-ft\">ft</label>\n          </div>\n        </div>\n\n      </div>\n    )\n  }\n}\n\nexport default ReferencePoints;","import React from 'react';\nimport LoadingScreen from './LoadingScreen';\n\nclass MeasurePoints extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isLoading: false,\n      loadingMessage: 'Measuring distance between selected points...'\n    };\n  }\n\n  predictLength = () => {\n    this.setState({isLoading: true});\n\n    // TODO: Do local data validation\n\n    let form = new FormData();\n    form.append('image_left_name', this.props.params.imageLeftName);\n    form.append('image_right_name', this.props.params.imageRightName);\n    form.append('focal_length', this.props.params.focalLength);\n    form.append('sensor_width', this.props.params.sensorWidth);\n    form.append('min_disparity', this.props.params.minDisparity);\n    form.append('num_disparity', this.props.params.numDisparity);\n    form.append('window_size', '9');\n\n    let reference_points = `${this.props.params.referencePt1.x},${this.props.params.referencePt1.y}`;\n    reference_points += `,${this.props.params.referencePt2.x},${this.props.params.referencePt2.y}`;\n\n    let measurement_points = `${this.props.params.measurePt1.x},${this.props.params.measurePt1.y}`;\n    measurement_points += `,${this.props.params.measurePt2.x},${this.props.params.measurePt2.y}`;\n\n    form.append('reference_points', reference_points);\n    form.append('reference_length', this.props.params.referenceLength);\n    form.append('measurement_points', measurement_points);\n    \n    let request = new XMLHttpRequest();\n    let react = this;\n    request.onreadystatechange = function() {\n      if(this.readyState === 4) { \n        if(this.status === 200) {\n          // errorLog.innerHTML = '';\n          react.props.updateAppState({\n            estimatedDistance: Math.round(JSON.parse(this.responseText)[\"distance\"]).toString()\n          });\n        } else {\n          // errorLog.innerHTML = this.responseText;\n        }\n        react.setState({isLoading: false});\n      }\n    };\n    request.open(\"POST\", \"http://localhost:9000/estimate_distance\");\n    request.send(form);\n  }\n\n  render() {\n    return (\n      <div>\n        <LoadingScreen \n          isLoading={this.state.isLoading}\n          loadingMessage={this.state.loadingMessage}\n        />\n        \n        <h2 className=\"mb-4\">Points to Measure</h2>\n        <p>Click on the image to set two points you would like the measurement of.</p>\n\n        <div className=\"mt-4 mb-5\">\n          <button type=\"button\" className=\"btn btn-secondary\" onClick={this.props.clearPoints}>Clear Measurement Points</button>\n        </div>\n\n        <div className=\"d-flex justify-content-between align-items-center\">\n          <span>Predict Measurement</span>\n          <button type=\"button\" className=\"btn btn-primary\" onClick={this.predictLength}>Measure</button>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default MeasurePoints;","import React, { Component } from 'react';\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\nimport CameraSettings from './CameraSettings';\nimport DisparitySettings from './DisparitySettings';\nimport ReferencePoints from './ReferencePoints';\nimport MeasurePoints from './MeasurePoints';\nimport angleright from '../icons/AngleRight.svg';\nimport anglerightwhite from '../icons/AngleRightWhite.svg';\n\nclass Sidebar extends Component {\n\n  clearPoints = () => {\n    this.props.updateState({\n      [this.props.canvasMode + 'Pt1']: '',\n      [this.props.canvasMode + 'Pt2']: '',\n    })\n  }\n\n  onChangeHandler = event => {\n    const target = event.target;\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    const name = target.name;\n\n    this.props.updateState({\n      [name]: value\n    });\n  }\n\n  render() {\n    return (\n      <TransitionGroup component={null}>\n        { this.props.currentStep !== 1 && this.props.currentStep !== 3 && this.props.currentStep !== 6  &&\n          <CSSTransition key=\"sidebar\" classNames=\"slide\" timeout={300}>\n          <div className=\"side-panel d-flex justify-content-center\">\n            <div className=\"side-panel__content\">\n              \n              \n              <TransitionGroup component={null}>\n                { this.props.currentStep === 2 &&\n                  <CSSTransition key=\"step2\" classNames=\"fadeSlide\" timeout={300}>\n                    <div className=\"side-panel__entry\">\n                      <div className=\"mb-5\">\n                        <span className=\"clickable d-flex align-items-center\" onClick={this.props.handleOnclickBack}>\n                          <img className=\"mr-3\" src={angleright} alt=\">\"/> Back\n                        </span>\n                      </div>\n\n                      <h2 className=\"mb-4\">Camera Settings</h2>\n                      <CameraSettings \n                        imageName={this.props.params.imageLeftName}\n                        focalLength={this.props.params.focalLength} \n                        sensorWidth={this.props.params.sensorWidth} \n                        onSettingsChange={this.props.updateState}\n                        />\n\n                      <div className=\"text-right mt-5\">\n                        <button type=\"button\" className=\"continue ml-auto btn btn-primary d-flex align-items-center\" onClick={this.props.handleOnclickNext}>\n                          Continue <img className=\"ml-2\" src={anglerightwhite} alt=\"\"/>\n                        </button>\n                      </div>\n                    </div>\n                  </CSSTransition>\n                }\n              </TransitionGroup>\n                \n              <TransitionGroup component={null}>\n                { this.props.currentStep === 3 &&\n                  <CSSTransition key=\"step3\" classNames=\"fadeSlide\" timeout={300}>\n                    <div className=\"side-panel__entry\">\n                      <div className=\"mb-5\">\n                        <span className=\"clickable d-flex align-items-center\" onClick={this.props.handleOnclickBack}>\n                          <img className=\"mr-3\" src={angleright} alt=\"\"/> Back\n                        </span>\n                      </div>\n\n                      <DisparitySettings \n                        params={this.props.params}\n                        onSettingsChange={this.props.updateState}\n                        setValidPoints={this.props.updateState}\n                        imageWidth={this.props.calculatedParams.image_width}\n                        imageHeight={this.props.calculatedParams.image_height}\n                        validPoints={this.props.calculatedParams.validPoints}\n                        nextStep={this.props.handleOnclickNext}\n                        errorLog={\"\"}\n                      />\n\n                    </div>\n                  </CSSTransition>\n                }\n              </TransitionGroup>\n\n              <TransitionGroup component={null}>\n              { this.props.currentStep === 4 &&\n                <CSSTransition key=\"step4\" classNames=\"fadeSlide\" timeout={300}>\n                  <div className=\"side-panel__entry\">\n                    <div className=\"mb-5\">\n                      <span className=\"clickable d-flex align-items-center\" onClick={this.props.handleOnclickBack}>\n                        <img className=\"mr-3\" src={angleright} alt=\"\"/> Back\n                      </span>\n                    </div>\n\n                    <ReferencePoints \n                      referenceLength={this.props.referenceLength}\n                      clearPoints={this.clearPoints}\n                      referenceUnit={this.props.referenceUnit}\n                      onChangeHandler={this.onChangeHandler}\n                      updateState={this.props.updateState}\n                    />\n\n                    <div className=\"text-right mt-5\">\n                      <button type=\"button\" className=\"continue ml-auto btn btn-primary d-flex align-items-center\" onClick={this.props.handleOnclickNext}>\n                        Continue <img className=\"ml-2\" src={anglerightwhite} alt=\"\"/>\n                      </button>\n                    </div>\n                  </div>\n                </CSSTransition>\n              }\n            </TransitionGroup>\n\n              <TransitionGroup component={null}>\n              {/* Step  5*/ this.props.currentStep === 5 &&\n                <CSSTransition key=\"step5\" classNames=\"fadeSlide\" timeout={300}>\n                  <div className=\"side-panel__entry\">\n                    <div className=\"mb-5\">\n                      <span className=\"clickable d-flex align-items-center\" onClick={this.props.handleOnclickBack}>\n                        <img className=\"mr-3\" src={angleright} alt=\"\"/> Back\n                      </span>\n                    </div>\n\n                    <MeasurePoints \n                      params={this.props.params}\n                      updateAppState={this.props.updateState}\n                      clearPoints={this.clearPoints}\n                      nextStep={this.props.handleOnclickNext}\n                      errorLog={\"\"}\n                    />\n                    \n                  </div>\n                </CSSTransition>\n              }\n              </TransitionGroup>\n\n            </div>\n          </div>\n          </CSSTransition>\n        }\n      </TransitionGroup>\n    );\n  }\n}\n\nexport default Sidebar;\n","import React, { Component } from 'react';\nimport convert from 'convert-units';\nimport ImagePanel from './components/ImagePanel';\nimport Sidebar from './components/Sidebar';\nimport redocircle from './icons/RedoCircle.svg';\nimport './App.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      session: Date.now(),\n      imageLeft: '',\n      imageLeftName: '',\n      imageRight: '',\n      imageRightName: '',\n      focalLength: '',\n      sensorWidth: '',\n      minDisparity: 32,\n      numDisparity: 96,\n      referencePt1: '',\n      referencePt2: '',\n      referenceLength: '',\n      measurePt1: '',\n      measurePt2: '',\n      estimatedDistance: '',\n      measureUnit: 'mm',\n      referenceUnit: 'mm',\n      canvasMode: 'view',\n      image_width: 640,\n      image_height: 600,\n      validPoints: '',\n      currentStep: 1,\n      errorLog: '',\n    };\n  }\n\n  restart = () => {\n    this.setState({\n      imageLeft: '',\n      imageLeftName: '',\n      imageRight: '',\n      imageRightName: '',\n      focalLength: '',\n      sensorWidth: '',\n      minDisparity: 32,\n      numDisparity: 96,\n      referencePt1: '',\n      referencePt2: '',\n      referenceLength: '',\n      measurePt1: '',\n      measurePt2: '',\n      estimatedDistance: '',\n      measureUnit: 'mm',\n      referenceUnit: 'mm',\n      canvasMode: 'view',\n      image_width: 640,\n      image_height: 600,\n      validPoints: '',\n      currentStep: 1,\n      errorLog: '',\n    })\n  }\n\n  handleStateUpdate = newState => {\n    this.setState(newState);\n  }\n\n  handleChange = event => {\n    this.setState({[event.target.name]: event.target.value});\n  }\n\n  handleOnclickBack = () => {\n    const back = this.state.currentStep - 1\n    const step = Math.max(1, back)\n    let mode = 'view'\n\n    if(step === 4)\n      mode = 'reference';\n    if(step === 5)\n      mode = 'measure';\n\n    this.setState({\n      currentStep: step,\n      canvasMode: mode\n    });\n  }\n\n  handleOnclickNext = () => {\n    const next = this.state.currentStep + 1\n    const step = Math.min(6, next)\n    let mode = 'view'\n\n    if(step === 4)\n      mode = 'reference';\n    if(step === 5)\n      mode = 'measure';\n\n    this.setState({\n      currentStep: step,\n      canvasMode: mode\n    });\n  }\n\n  getMeasurement = () => {\n    let length = this.state.estimatedDistance;\n    if (length === '') return length;\n\n    let measureUnit = this.state.measureUnit;\n    let referenceUnit = this.state.referenceUnit;\n\n    length = convert(length).from(referenceUnit).to(measureUnit);\n    length = Math.round(length * 100) / 100\n\n    return length;\n  }\n\n  render() {\n    const estimatedDistance = this.getMeasurement(),\n          files = {\n            session: this.state.session,\n            imageLeft: this.state.imageLeft,\n            imageRight: this.state.imageRight,\n            imageLeftName: this.state.imageLeftName,\n            imageRightName: this.state.imageRightName,\n          },\n          userPoints = {\n            referencePt1: this.state.referencePt1,\n            referencePt2: this.state.referencePt2,\n            measurePt1: this.state.measurePt1,\n            measurePt2: this.state.measurePt2,\n          },\n          params = {\n            imageLeftName: this.state.imageLeftName,\n            imageRightName: this.state.imageRightName,\n            focalLength: this.state.focalLength,\n            sensorWidth: this.state.sensorWidth,\n            minDisparity: this.state.minDisparity,\n            numDisparity: this.state.numDisparity,\n            referencePt1: this.state.referencePt1,\n            referencePt2: this.state.referencePt2,\n            referenceLength: this.state.referenceLength,\n            measurePt1: this.state.measurePt1,\n            measurePt2: this.state.measurePt2,\n          },\n          calculatedParams = {\n            estimatedDistance: this.state.estimatedDistance,\n            image_width: this.state.image_width,\n            image_height: this.state.image_height,\n            validPoints: this.state.validPoints,\n          };\n\n    const unitchanger = \n          <div className=\"unit-changer d-flex justify-content-start align-items-center mb-3\">\n            <h5 className=\"text-nowrap mr-4 mb-0\">Unit of Measure</h5>\n            <div className=\"input-group\">\n              <select className=\"custom-select\" name=\"measureUnit\" value={this.state.measureUnit} onChange={this.handleChange}>\n                <option value=\"mm\">mm</option>\n                <option value=\"cm\">cm</option>\n                <option value=\"m\">m</option>\n                <option value=\"in\">inches</option>\n                <option value=\"ft\">feet</option>\n              </select>\n            </div>\n          </div>;\n\n    return (\n      <div className=\"App\">\n        <header>\n          <nav className=\"navbar fixed-top\">\n            <div className=\"navbar-container d-flex justify-content-between align-items-center\">\n              <span className=\"navbar-brand clickable mr-auto\" onClick={this.restart}>\n                <img src=\"logo.png\" alt=\"Stereoscopic Logo\"/>\n              </span>\n              \n                {this.state.currentStep > 1 &&\n                  <span className=\"clickable d-flex justify-content-between align-items-center\" onClick={this.restart}>\n                    <img src={redocircle} className=\"redo-circle-svg\" alt=\"redo\" /> Start Over\n                  </span>\n                }\n            </div>\n          </nav>\n        </header>\n\n        <div className=\"Main d-flex justify-content-between\">\n\n          <ImagePanel\n            files={files}\n            params={params}\n            estimatedDistance={estimatedDistance}\n            measureUnit={this.state.measureUnit}\n            referenceLength={this.state.referenceLength}\n            referenceUnit={this.state.referenceUnit}\n            focalLength={this.state.focalLength}\n            sensorWidth={this.state.sensorWidth}\n            resizeWidth={this.state.image_width}\n            resizeHeight={this.state.image_height}\n            canvasMode={this.state.canvasMode}\n            validPoints={this.state.validPoints}\n            userPoints={userPoints}\n            currentStep={this.state.currentStep}\n            updateState={this.handleStateUpdate}\n            handleOnclickNext={this.handleOnclickNext}\n            handleOnclickBack={this.handleOnclickBack}\n            unitchanger={unitchanger}\n          />\n          \n          <Sidebar \n            params={params}\n            calculatedParams={calculatedParams}\n            canvasMode={this.state.canvasMode}\n            currentStep={this.state.currentStep}\n            updateState={this.handleStateUpdate}\n            referenceUnit={this.state.referenceUnit}\n            handleOnclickNext={this.handleOnclickNext}\n            handleOnclickBack={this.handleOnclickBack}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<div id=\"loadContainer\"><App /></div>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/AngleRight.75bf57e0.svg\";"],"sourceRoot":""}